<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.log.mapper.AbnormalLogMapper">

    <resultMap type="AbnormalLog" id="AbnormalLogResult">
        <result property="logId"    column="log_id"    />
        <result property="eventTime"    column="event_time"    />
        <result property="status"    column="status"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectAbnormalLogVo">
        select log_id, event_time, status, remark from abnormal_log
    </sql>

    <select id="selectAbnormalLogList" parameterType="AbnormalLog" resultMap="AbnormalLogResult">
        <include refid="selectAbnormalLogVo"/>
        <where>
            <if test="status != null">AND status = #{status}</if>
            <if test="beginTime != null and beginTime != ''">
                AND DATE_FORMAT(event_time, '%Y-%m-%d') &gt;= #{beginTime}
            </if>
            <if test="endTime != null and endTime != ''">
                AND DATE_FORMAT(event_time, '%Y-%m-%d') &lt;= #{endTime}
            </if>
        </where>
    </select>

    <select id="selectAbnormalLogByLogId" parameterType="Long" resultMap="AbnormalLogResult">
        <include refid="selectAbnormalLogVo"/>
        where log_id = #{logId}
    </select>

    <insert id="insertAbnormalLog" parameterType="AbnormalLog" useGeneratedKeys="true" keyProperty="logId">
        insert into abnormal_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="eventTime != null">event_time,</if>
            <if test="status != null">status,</if>
            <if test="remark != null">remark,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="eventTime != null">#{eventTime},</if>
            <if test="status != null">#{status},</if>
            <if test="remark != null">#{remark},</if>
        </trim>
    </insert>

    <update id="updateAbnormalLog" parameterType="AbnormalLog">
        update abnormal_log
        <trim prefix="SET" suffixOverrides=",">
            <if test="eventTime != null">event_time = #{eventTime},</if>
            <if test="status != null">status = #{status},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where log_id = #{logId}
    </update>

    <delete id="deleteAbnormalLogByLogId" parameterType="Long">
        delete from abnormal_log where log_id = #{logId}
    </delete>

    <delete id="deleteAbnormalLogByLogIds" parameterType="String">
        delete from abnormal_log where log_id in
        <foreach item="logId" collection="array" open="(" separator="," close=")">
            #{logId}
        </foreach>
    </delete>
</mapper>